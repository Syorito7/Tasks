#include <stdio.h>// указывает и подключает расположенные файлы, библиотека потока ввода и вывода

int point_on_the_plane(double _x, double _y);//прототип функции "Точка на плоскости"

int main()
{
	double x, y;// объявление вещественных переменных x, y
	printf("Enter the number x=");// вывод на консоль
	scanf_s("%lf", &x);// ввод переменной x
	printf("\nEnter the number y=");// вывод на консоль
	scanf_s("%lf", &y);// ввод переменной y
	if (((x <= 2.0) && (x >= -2.0) && (y <= 2.0) && (y>=-2.0))&&((y>=x)||(y>=-x)))// сложное условие
	{
		printf("YES\n");// вывод на консоль, что точка находится на заданной плоскости
	}
	else // если условие не верно, то выполнить данную последовательность команд
	{
		printf("NO\n");// вывод на консоль, что точка не находится на заданной плоскости
	}
	int k = 1;// объявление и инициализирование целочисленной переменной k, которая будет менять значение на 0, если точка принадлежит заданной плоскости, иначе вывести на консоль, что это не верно
	if (x <= 2.0) // вложенные простые условия
	{
		if (x >= -2.0)
		{
			if (y <= 2.0)
			{
				if (y >= -2.0)
				{
					if (y >= x)
					{
						printf("YES\n");// вывод на консоль
						k = 0;// присвоение k=0
					}
					else if (y >= -x)
					{
						printf("YES\n");// вывод на консоль
						k = 0;// присвоение k=0
					}
				}
			}
		}
	}
	if (k == 1)// проверка на k, если k не изменилось, т.е. k=1, то вывести на консоль, что точка не принадлежит заданной плоскости
	{
		printf("NO\n");
	}
	if (point_on_the_plane(x, y))// использование функции
	{
		printf("YES\n");// вывод на консоль, если функция "Точка на плоскости" вернула 1
	}
	else
	{
		printf("NO\n");// вывод на консоль, если функция "Точка на плоскости" вернула 0
	}
	return 0;
}

//функция "Точка на плоскости", которая возвращает целочисленное число (0 или 1)
int point_on_the_plane(double _x, double _y)
{
	return (((_x <= 2.0) && (_x >= -2.0) && (_y <= 2.0) && (_y >= -2.0)) && ((_y >= _x) || (_y >= -_x)));// возвращение 1 или 0, условие верно или нет
}